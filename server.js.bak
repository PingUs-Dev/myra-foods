import express from "express";
import { fileURLToPath } from "url";
import path from "path";
import nodemailer from "nodemailer";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
<<<<<<< HEAD
const PORT = 3000;

// Middleware
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());

// Email Configuration
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.GMAIL_USER || 'sanjaibalasubramaniam26@gmail.com',
    pass: process.env.GMAIL_PASSWORD || 'your-app-password-here',
  },
});

// Generate Customer Email HTML
const generateCustomerEmail = (order) => {
  const itemsHTML = order.items
    .map(
      (item) => `
    <tr style="border-bottom: 1px solid #e5e5e5;">
      <td style="padding: 16px; font-weight: 500; color: #333;">${item.name}</td>
      <td style="padding: 16px; text-align: center; color: #666;">√ó${item.quantity}</td>
      <td style="padding: 16px; text-align: right; color: #16a34a; font-weight: 600;">‚Çπ${
        (parseInt(item.price.replace('‚Çπ', '')) * item.quantity).toFixed(0)
      }</td>
    </tr>
  `
    )
    .join('');

  return `
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Order Confirmation - Myra Foods</title>
      <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #f0fdf4 0%, #fffbeb 100%); padding: 20px; }
        .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); overflow: hidden; }
        .header { background: linear-gradient(135deg, #16a34a 0%, #22c55e 100%); color: white; padding: 30px; text-align: center; }
        .header h1 { font-size: 28px; margin-bottom: 5px; }
        .header p { font-size: 14px; opacity: 0.9; }
        .content { padding: 30px; }
        .section { margin-bottom: 30px; }
        .section-title { font-size: 18px; font-weight: 700; color: #1f2937; margin-bottom: 15px; }
        .info-box { background: #f9fafb; border-left: 4px solid #16a34a; padding: 15px; border-radius: 4px; margin-bottom: 10px; }
        .info-label { font-size: 12px; color: #6b7280; text-transform: uppercase; letter-spacing: 0.5px; }
        .info-value { font-size: 16px; color: #1f2937; font-weight: 600; margin-top: 5px; }
        .order-id { background: linear-gradient(135deg, #fef3c7 0%, #fef08a 100%); border: 2px solid #eab308; padding: 15px; border-radius: 8px; text-align: center; margin-bottom: 20px; }
        .order-id-label { font-size: 12px; color: #92400e; text-transform: uppercase; }
        .order-id-value { font-size: 24px; font-weight: 700; color: #16a34a; margin-top: 5px; font-family: 'Courier New', monospace; }
        .items-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        .items-table th { background: #f3f4f6; padding: 12px 16px; text-align: left; font-weight: 600; color: #4b5563; font-size: 13px; border-bottom: 2px solid #e5e7eb; }
        .summary-box { background: #f9fafb; border-radius: 8px; padding: 20px; margin: 20px 0; }
        .summary-row { display: flex; justify-content: space-between; margin-bottom: 12px; font-size: 14px; }
        .summary-row.total { border-top: 2px solid #e5e7eb; padding-top: 12px; margin-top: 12px; font-size: 18px; font-weight: 700; color: #16a34a; }
        .delivery-estimate { background: linear-gradient(135deg, #dbeafe 0%, #e0f2fe 100%); border-left: 4px solid #0284c7; padding: 15px; border-radius: 4px; margin: 20px 0; }
        .delivery-estimate p { color: #0c4a6e; font-size: 14px; line-height: 1.6; }
        .footer { background: #f9fafb; padding: 20px; text-align: center; border-top: 1px solid #e5e7eb; }
        .footer p { font-size: 12px; color: #6b7280; margin: 5px 0; }
        .badge { display: inline-block; background: #dbeafe; color: #0c4a6e; padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; margin-right: 10px; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>üéâ Order Confirmed!</h1>
          <p>Thank you for your order with Myra Foods</p>
        </div>
        <div class="content">
          <div style="font-size: 48px; text-align: center; margin: 20px 0;">‚úÖ</div>
          <div class="order-id">
            <div class="order-id-label">Order ID</div>
            <div class="order-id-value">${order.id}</div>
          </div>
          <div class="section">
            <h2 class="section-title">‚úì Delivery Details</h2>
            <div class="info-box">
              <div class="info-label">üë§ Name</div>
              <div class="info-value">${order.customerName}</div>
            </div>
            <div class="info-box">
              <div class="info-label">üì± Phone</div>
              <div class="info-value">${order.customerPhone}</div>
            </div>
            <div class="info-box">
              <div class="info-label">üìç Delivery Address</div>
              <div class="info-value">${order.deliveryAddress}</div>
            </div>
            <div class="info-box">
              <div class="info-label">‚è∞ Order Time</div>
              <div class="info-value">${order.orderTime}</div>
            </div>
          </div>
          <div class="section">
            <h2 class="section-title">‚úì Order Summary</h2>
            <table class="items-table">
              <thead>
                <tr>
                  <th>Item</th>
                  <th style="text-align: center;">Qty</th>
                  <th style="text-align: right;">Price</th>
                </tr>
              </thead>
              <tbody>
                ${itemsHTML}
              </tbody>
            </table>
            <div class="summary-box">
              <div class="summary-row">
                <span>Subtotal (${order.items.length} items)</span>
                <span>‚Çπ${order.subtotal}</span>
              </div>
              <div class="summary-row">
                <span>Delivery Fee ${order.deliveryFee === 0 ? '(FREE)' : ''}</span>
                <span>${order.deliveryFee === 0 ? 'üéâ FREE' : '‚Çπ' + order.deliveryFee}</span>
              </div>
              <div class="summary-row">
                <span>Taxes & Charges</span>
                <span>‚Çπ${order.tax}</span>
              </div>
              <div class="summary-row total">
                <span>Total Amount</span>
                <span>‚Çπ${order.total}</span>
              </div>
            </div>
          </div>
          <div class="delivery-estimate">
            <p><strong>üöö Estimated Delivery:</strong> 30-45 minutes</p>
            <p>Your order has been confirmed and is being prepared. You'll receive a notification when it's on its way!</p>
          </div>
          <div class="section">
            <h2 class="section-title">‚úì Why Choose Myra Foods?</h2>
            <div style="display: flex; gap: 15px; margin-top: 15px;">
              <div style="flex: 1;"><span class="badge">‚úì Fresh Quality</span><p style="font-size: 13px; color: #666; margin-top: 5px;">Sourced fresh daily</p></div>
              <div style="flex: 1;"><span class="badge">‚úì Fast Delivery</span><p style="font-size: 13px; color: #666; margin-top: 5px;">30-45 minutes</p></div>
              <div style="flex: 1;"><span class="badge">‚úì Secure Payment</span><p style="font-size: 13px; color: #666; margin-top: 5px;">100% Safe</p></div>
            </div>
          </div>
          <div style="background: #e8f5e9; border-left: 4px solid #4caf50; padding: 15px; border-radius: 4px; margin: 20px 0;">
            <p style="font-size: 14px; color: #2e7d32; line-height: 1.6;">
              <strong>Need Help?</strong><br>
              üìß Email: <a href="mailto:sanjaibalasubramaniam26@gmail.com" style="color: #16a34a; text-decoration: none;">sanjaibalasubramaniam26@gmail.com</a><br>
              üí¨ WhatsApp: Available 8 AM - 10 PM
            </p>
          </div>
        </div>
        <div class="footer">
          <p>¬© 2025 Myra Foods. All rights reserved.</p>
          <p style="margin-top: 10px;">Thank you for ordering with us! üôè</p>
        </div>
      </div>
    </body>
    </html>
  `;
};

// Generate Admin Email HTML
const generateAdminEmail = (order) => {
  const itemsHTML = order.items
    .map(
      (item) => `
    <tr style="border-bottom: 1px solid #e5e5e5;">
      <td style="padding: 12px; border-right: 1px solid #e5e5e5;">${item.name}</td>
      <td style="padding: 12px; text-align: center; border-right: 1px solid #e5e5e5;">√ó${item.quantity}</td>
      <td style="padding: 12px; text-align: right;">‚Çπ${
        (parseInt(item.price.replace('‚Çπ', '')) * item.quantity).toFixed(0)
      }</td>
    </tr>
  `
    )
    .join('');

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <style>
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        .container { max-width: 700px; margin: 20px auto; background: white; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .header { background: linear-gradient(135deg, #16a34a 0%, #22c55e 100%); color: white; padding: 20px; text-align: center; }
        .content { padding: 20px; }
        table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        th { background: #f3f4f6; padding: 12px; text-align: left; font-weight: 600; border-bottom: 2px solid #e5e7eb; }
        .info-section { background: #f9fafb; padding: 15px; margin: 15px 0; border-radius: 4px; }
        .info-row { display: flex; justify-content: space-between; margin: 8px 0; }
        .label { font-weight: 600; color: #333; }
        .value { color: #666; }
        .total-section { background: #fff3cd; padding: 15px; border-radius: 4px; margin: 20px 0; border-left: 4px solid #ffc107; }
        .total-row { display: flex; justify-content: space-between; font-size: 16px; font-weight: 700; color: #16a34a; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h2>üéâ New Order Received!</h2>
          <p>Order ID: <strong>${order.id}</strong></p>
        </div>
        <div class="content">
          <div class="info-section">
            <h3 style="margin: 0 0 10px 0; color: #333;">üë§ Customer Details</h3>
            <div class="info-row">
              <span class="label">Name:</span>
              <span class="value">${order.customerName}</span>
            </div>
            <div class="info-row">
              <span class="label">Email:</span>
              <span class="value"><a href="mailto:${order.customerEmail}">${order.customerEmail}</a></span>
            </div>
            <div class="info-row">
              <span class="label">Phone:</span>
              <span class="value"><a href="tel:${order.customerPhone}">${order.customerPhone}</a></span>
            </div>
            <div class="info-row">
              <span class="label">Address:</span>
              <span class="value">${order.deliveryAddress}</span>
            </div>
            <div class="info-row">
              <span class="label">Order Time:</span>
              <span class="value">${order.orderTime}</span>
            </div>
          </div>

          <h3 style="color: #333; margin-top: 20px;">üì¶ Order Items</h3>
          <table>
            <thead>
              <tr>
                <th>Item Name</th>
                <th style="text-align: center;">Quantity</th>
                <th style="text-align: right;">Price</th>
              </tr>
            </thead>
            <tbody>
              ${itemsHTML}
            </tbody>
          </table>

          <div class="total-section">
            <div class="info-row" style="margin-bottom: 10px;">
              <span>Subtotal (${order.items.length} items):</span>
              <span>‚Çπ${order.subtotal}</span>
            </div>
            <div class="info-row" style="margin-bottom: 10px;">
              <span>Delivery Fee:</span>
              <span>${order.deliveryFee === 0 ? 'üéâ FREE' : '‚Çπ' + order.deliveryFee}</span>
            </div>
            <div class="info-row" style="margin-bottom: 10px;">
              <span>Tax:</span>
              <span>‚Çπ${order.tax}</span>
            </div>
            <div class="total-row">
              <span>TOTAL AMOUNT:</span>
              <span>‚Çπ${order.total}</span>
            </div>
          </div>

          <div style="background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; border-radius: 4px; margin-top: 20px;">
            <p style="margin: 5px 0; font-size: 14px; color: #1565c0;"><strong>‚ö° Action Required:</strong></p>
            <p style="margin: 5px 0; font-size: 13px; color: #1976d2;">Please prepare and dispatch this order as soon as possible.</p>
          </div>
        </div>
      </div>
    </body>
    </html>
  `;
};

// Routes
app.get('/cart', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'cart.html'));
});

// Create Order and Send Emails
app.post('/api/orders/create', async (req, res) => {
  try {
    const order = req.body;

    // Validate order data
    if (!order.id || !order.customerEmail || !order.items || order.items.length === 0) {
      return res.status(400).json({ error: 'Invalid order data' });
    }

    // Send customer confirmation email
    const customerEmailResult = await transporter.sendMail({
      from: process.env.GMAIL_USER || 'sanjaibalasubramaniam26@gmail.com',
      to: order.customerEmail,
      subject: `‚úÖ Order Confirmed - Myra Foods (Order ID: ${order.id})`,
      html: generateCustomerEmail(order),
    });

    console.log('‚úÖ Customer email sent:', customerEmailResult.messageId);

    // Send admin notification email
    const adminEmailResult = await transporter.sendMail({
      from: process.env.GMAIL_USER || 'sanjaibalasubramaniam26@gmail.com',
      to: 'sanjaibalasubramaniam26@gmail.com',
      subject: `üì¶ New Order - ${order.customerName} (${order.id})`,
      html: generateAdminEmail(order),
    });

    console.log('‚úÖ Admin email sent:', adminEmailResult.messageId);

    // Log order to console (in production, save to database)
    console.log('\nüìã ORDER RECEIVED:');
    console.log('==================');
    console.log(`Order ID: ${order.id}`);
    console.log(`Customer: ${order.customerName}`);
    console.log(`Items: ${order.items.length}`);
    console.log(`Total: ‚Çπ${order.total}`);
    console.log('==================\n');

    res.status(200).json({
      success: true,
      message: 'Order placed successfully',
      orderId: order.id,
    });
  } catch (error) {
    console.error('‚ùå Error creating order:', error);
    res.status(500).json({
      error: 'Failed to process order',
      details: error.message,
    });
  }
});

// Health check
app.get('/api/health', (req, res) => {
  res.json({ status: 'Server is running', timestamp: new Date() });
});

// Start server
app.listen(PORT, () => {
  console.log(`üõí Express server running at http://localhost:${PORT}`);
  console.log(`üìß Email service configured`);
  console.log(`‚úÖ Ready to receive orders!`);
});
=======
const PORT = 3000; // The port your Express server will run on

// Serve static files from a 'public' directory
app.use(express.static(path.join(__dirname, 'public')));

// Route for your cart page
app.get('/cart', (req, res) => {
  // Send the cart.html file when someone visits /cart
  res.sendFile(path.join(__dirname, 'public', 'cart.html'));
});

app.listen(PORT, () => {
  console.log(`üõí Express server running at http://localhost:${PORT}`);
});

>>>>>>> 9c3f91f6b171c92caeada8bb6937f3780576dd0f
